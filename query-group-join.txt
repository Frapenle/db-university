-- 1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
SELECT students.name AS nome, students.surname AS cognome, degrees.name AS corso_di_Laurea
FROM students
JOIN degrees
ON students.degree_id = degrees.id
WHERE degrees.name = 'corso di laurea in economia';

-- 2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
SELECT departments.id, departments.name AS nome_dipartimento, degrees.name AS nome_corso_laurea
FROM departments
JOIN degrees
ON degrees.department_id = departments.id
WHERE degrees.level = 'magistrale'
AND departments.name = 'dipartimento di neuroscienze';

-- 3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT teachers.name AS nome, teachers.surname AS cognome, courses.name AS nome_corso
FROM teachers
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
WHERE teachers.id = 44;

-- 4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
SELECT students.surname AS cognome, students.name AS nome, degrees.name AS corso_di_laurea, degrees.level AS livello,  departments.name AS dipartimento, degrees.address AS indirizzo, degrees.email, degrees.website
FROM students
JOIN degrees
ON students.degree_id = degrees.id
JOIN departments
ON departments.id = degrees.department_id
ORDER BY students.surname, students.name ASC;

-- 5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT teachers.surname AS cognome_insegnante, teachers.name AS nome_insegnante, degrees.name AS corso_laurea, degrees.level AS livello, courses.name AS nome_corso
FROM degrees
JOIN courses
ON courses.degree_id = degrees.id
JOIN course_teacher
ON course_teacher.course_id = courses.id
JOIN teachers
ON course_teacher.teacher_id = teachers.id;

-- 6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
SELECT DISTINCT teachers.id ID, teachers.name AS nome_insegnante, teachers.surname AS cognome_insegnante, departments.name AS nome_dipartimento
FROM teachers
JOIN course_teacher
ON course_teacher.teacher_id = teachers.id
JOIN courses
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE departments.name = 'dipartimento di matematica';

-- 7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami
SELECT students.id AS id, students.surname AS cognome, students.name AS nome, courses.name AS esame, COUNT(exam_student.vote) AS tentativi, MAX(exam_student.vote) AS voto
FROM students
JOIN exam_student
ON exam_student.student_id = students.id
JOIN exams
ON exams.id = exam_student.student_id
JOIN courses
ON courses.id = exams.course_id
-- Si usa HAVING al posto di WHERE quando si utilizza GROUP BY
GROUP BY id, esame
HAVING voto >= 18;
